begin;

create extension if not exists citext;

do $$
begin
    if not exists
    (
      select domain_name
      from information_schema.domains
      where domain_schema = 'public'
            and domain_name = 'email'
    )
    then
    -- Type for emails, validated according to https://dba.stackexchange.com/a/165923
       create domain email as citext
              check (value ~ '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$' );
    end if;
end
$$;

create table if not exists users (
       id            int generated by default as identity primary key
     , email_address email unique not null
     , password      text not null
     , salt          text not null
     , created_at    timestamp with time zone default now() not null
);

create table if not exists user_audits (
       id         int generated by default as identity primary key
     , user_id    int references users (id) not null
     , fields     jsonb not null
     , created_at timestamp with time zone default now() not null
);

create table if not exists events (
       id         int generated by default as identity primary key
     , user_id    int references users (id) not null
     , fields     jsonb not null
     , created_at timestamp with time zone default now() not null
);

comment on table user_audits is 'Contains all events about changes to user accounts.';
comment on table events is 'Contains all events about changes to user-owned data.';

commit;
